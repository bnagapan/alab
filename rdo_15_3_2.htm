	<!DOCTYPE html>
	<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>P l a y || R a d i o || S t r e a m</title>
		<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
		<style>
			 /* Basic reset */
			body, html {
				margin: 0;
				padding: 0;
				font-family: Arial, sans-serif;
				background-color: #f0f0f0;
			}

			/* Responsive viewport for mobile devices
			meta[name="viewport"] {
				width: device-width, initial-scale: 1.0, user-scalable=no;
			}
			 */
			 
			/* Main container */
			#content {
				padding: 20px;
				max-width: 100%;
				box-sizing: border-box;
				text-align: center;
			}

			/* Header */
			h1 {
				font-size: 26px;
				margin-bottom: 20px;
			}

			/* Button styling */
			#link  {
				display: inline-block;
				padding: 12px;
				background-color: #007bff; /* Primary Blue */
				color: white;
				text-decoration: none;
				border-radius: 5px;
				margin-bottom: 10px;
				font-size: 16px;
				width: 80%;
				max-width: 300px;
				text-align: center;
				cursor: pointer;
			}

			#link :hover {
				background-color: #0056b3; /* Darker Blue for hover */
			}

			#listButton,  #btnClear {
				display: inline-block;
				padding: 12px;
				background-color: #1e90ff; /* Dodger Blue */
				color: white;
				text-decoration: none;
				border-radius: 5px;
				margin-bottom: 10px;
				font-size: 16px;
				width: 80%;
				max-width: 300px;
				text-align: center;
				cursor: pointer;
			}

			#listButton , #btnClear :hover {
				background-color: #1c74d4; /* Slightly darker Dodger Blue for hover */
			}

			#prevButton {
				display: inline-block;
				padding: 12px;
				background-color: #4682b4; /* Steel Blue */
				color: white;
				text-decoration: none;
				border-radius: 5px;
				margin-bottom: 10px;
				font-size: 16px;
				width: 80%;
				max-width: 300px;
				text-align: center;
				cursor: pointer;
			}

			#prevButton:hover {
				background-color: #3b6e8f; /* Darker Steel Blue for hover */
			}

			#nextButton {
				display: inline-block;
				padding: 12px;
				background-color: #5f9ea0; /* Cadet Blue */
				color: white;
				text-decoration: none;
				border-radius: 5px;
				margin-bottom: 10px;
				font-size: 16px;
				width: 80%;
				max-width: 300px;
				text-align: center;
				cursor: pointer;
			}

			#nextButton:hover {
				background-color: #4e8a8a; /* Darker Cadet Blue for hover */
			}

			/* Audio player */
			#audio {
				width: 100%;
				margin-top: 20px;
				max-width: 400px;
			}

			/* Styling for the station list */
			#stationList {
				margin-top: 20px;
			}

			#stationList div {
				background-color: #f8f9fa;
				padding: 12px;
				margin-bottom: 10px;
				border-radius: 4px;
				font-size: 16px;
				cursor: pointer;
				width: 80%;
				max-width: 300px;
				margin-left: auto;
				margin-right: auto;
				text-align: left;
			}

			#stationList div:hover {
				background-color: #e9ecef;
			}

			#stationList div.active {
				background-color: #007bff;
				color: white;
			}

			/* Responsiveness for small screens */
			@media (max-width: 768px) {
				h1 {
					font-size: 22px;
				}

				#link, #listButton, #prevButton, #nextButton, #stationList div {
					font-size: 14px;
					padding: 10px;
					width: 90%;
					max-width: 280px;
				}

				#audio {
					width: 90%;
				}
			}
		</style>
	</head>
	<body>
		<div id="content">
			<h1>R | a | d | i | o</h1>
			<table border="0" cellspacing="3" cellpadding="3" align="center">
			<tr>
						<!-- Navigation buttons -->
				<td> <div id="prevButton">⏮ Previous</div>	</td>
				<td>&nbsp;</td>
				<td>
					 <!-- Clickable link to start the radio playlist -->
					<a href="javascript:void(0);" id="link"> ▶ ️ </a>
				</td>
				<td>&nbsp;</td>
				<td>        <div id="nextButton">⏭ Next</div></td>
			</tr>	
			<tr>
				<td colspan="3"> 
						<!-- Button to list all stations -->
						<div id="listButton" onclick="listStations()">List out all the stations</div>
				</td>
				<td colspan="2">
					<div id="btnClear" onclick="clearData()">Clear</div>
				</td>
			</tr>
			<tr>
				<td colspan="5">
					<!-- Audio player -->
					<audio id="audio" controls>
					Your browser does not support the audio element.
					</audio>
					<br>
					v 1.4
				</td>
			</tr>
			


			</table>
		   


			


			

			
			<br>
			<textarea id="output" name="w3review" rows="15" cols="80">
	At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.
	</textarea>

			<!-- Section to display the list of stations -->
			<div id="stationList"></div>
		</div>

		<script>
			var audio = document.getElementById('audio');
		
			// Base64 encoded station URLs
			var stations = [
				{ url: "aHR0cHM6Ly9yb2dlcnMtaGxzLmxlYW5zdHJlYW0uY28vcm9nZXJzL2hhbDk1Ny5zdHJlYW0vcGxheWxpc3QubTN1OA==", name: "#1. C|i|t|y N|e|w|s" },
				{ url: "aHR0cHM6Ly9jYmNyYWRpb2xpdmUuYWthbWFpemVkLm5ldC9obHMvbGl2ZS8yMDQwOTg3L0VTX1IxQUhGL21hc3Rlci5tM3U4", name: "#2. C|B|C R|a|d|i|o" },
				{ url: "aHR0cHM6Ly9zdHJlYW0uemVuby5mbS9hYWQ0ZTUxcXo3enV2", name: "#3. KS Chitra FM" },
				{ url: "aHR0cDovL3BzcmxpdmUyLmxpc3Rlbm9uLmluL2lybGl0ZT9haD0wZTgxNzQ5ZTM3Nzg5ZTVmYjhjMjkwOTI2Y2U4N2UzZg==", name: "#4. I|l|a|y|a|r|a|j|a Lite R|a|d|i|o" },
				{ url: "aHR0cDovL3BzcmxpdmUyLmxpc3Rlbm9uLmluL2lyYmVhdD9haD0wZTgxNzQ5ZTM3Nzg5ZTVmYjhjMjkwOTI2Y2U4N2UzZg==", name: "#5. I|l|a|y|a|r|a|j|a R|a|d|i|o" },
				{ url: "aHR0cHM6Ly9saXN0ZW4ub3BlbnN0cmVhbS5jby80NDI4L2F1ZGlv", name: "#6. Hello F|M" },
				{ url: "aHR0cHM6Ly9saXN0ZW4ub3BlbnN0cmVhbS5jby80NTQzL2F1ZGlv", name: "#7. M|i|r|c|y F|M" }
			];

			var currentStationIndex = 0;

			function decodeBase64Url(base64Url) {
				return atob(base64Url);
			}

			function playStation(index) {
				writeHeader();
				currentStationIndex = index % stations.length;
				var decodedUrl = decodeBase64Url(stations[currentStationIndex].url);
				var stationName = stations[currentStationIndex].name.replace(/\|/g, "");

				$('#stationList div').removeClass('active');
				$('#stationList div').eq(currentStationIndex).addClass('active');

				writeOutput('Station Name: ' + stationName);
				writeOutput('URL: ' + decodedUrl);
				writeOutput('currentStationIndex: ' + currentStationIndex);


					// Set new metadata for the current station
				if ('mediaSession' in navigator) {
					// Clear any existing metadata and actions
					if (index == 0)
					{
						navigator.mediaSession.metadata = null;
						//navigator.mediaSession.clearActionHandlers();
						writeOutput('Media session cleared');
					}
					// Set new metadata for the current station
					navigator.mediaSession.metadata = new MediaMetadata({
						title: stationName,
						artist: 'Radio',
						album: 'Live Stream'
					});

					navigator.mediaSession.setActionHandler('nexttrack', function () {
						playStation((currentStationIndex + 1) % stations.length);
					});

					navigator.mediaSession.setActionHandler('previoustrack', function () {
						playStation((currentStationIndex - 1 + stations.length) % stations.length);
					});
				}

				audio.pause(); // Ensure previous audio is stopped before playing new one.

				// Check if HLS is supported for m3u8 streams
				if (decodedUrl.endsWith('.m3u8') && Hls.isSupported()) {
					var hls = new Hls();
					hls.loadSource(decodedUrl);
					hls.attachMedia(audio);

					// Wait for the media to be attached before starting playback
					hls.on(Hls.Events.MEDIA_ATTACHED, function () {
						audio.play().catch(handlePlaybackError);
					});

					hls.on(Hls.Events.ERROR, function (event, data) {
						writeOutput('Error in HLS: ' + data.type);
						handlePlaybackError(data);
					});
				} else {
					// Non-HLS stream: Load the audio and ensure it's ready to play
					writeOutput('Buffering...CP0');
					if ('mediaSession' in navigator) {
						navigator.mediaSession.metadata = new MediaMetadata({
							title: stationName + ' (Buffering...)',
							artist: 'Radio',
							album: 'Live Stream'
						});
					}

					audio.src = decodedUrl;
					audio.load();
					writeOutput('Loading...CP1');
					// Wait for the audio to be ready before playing it
					audio.addEventListener('canplaythrough', function () {
						audio.play().catch(
						audio.play().catch(new Error('Error loading audio stream#2'))
						);
					});
					writeOutput('Playing...CP2');
					// Handle audio load error
					audio.addEventListener('error', function () {
						writeOutput('Error loading audio stream');
						handlePlaybackError(new Error('Error loading audio stream'));
					});
				}
			}




			function handlePlaybackError(error) {
				writeOutput('Error playing stream: ' + error.message);
				if ('mediaSession' in navigator) {
					navigator.mediaSession.metadata = new MediaMetadata({
						title: 'Playback failed',
						artist: 'Radio',
						album: 'Playback Error'
					});
				}
				console.error('Playback error:', error);
			}


			$('#link').click(function () {
				$("#output").val('');
				playStation(currentStationIndex);
				listStations();
			});

			$('#nextButton').click(function () {
				playStation((currentStationIndex + 1) % stations.length);
			});

			$('#prevButton').click(function () {
				playStation((currentStationIndex - 1 + stations.length) % stations.length);
			});

			audio.addEventListener('ended', function () {
				playStation((currentStationIndex + 1) % stations.length);
			});

			function listStations() {
				$('#stationList').html(stations.map((s, i) => 
					`<div onclick="playStation(${i})" id="station-${i}" class="${i === currentStationIndex ? 'active' : ''}">
						${s.name.replace(/\|/g, "")}
					</div>`
				).join(''));
			}

			
			function writeOutput(txt)
			{
				$('#output').val($('#output').val() + '\n' + txt);
			}
			

			
			function writeHeader()
			{
				$('#output').val($('#output').val() + '\n--------------------------------');
			}
			
			function clearData() {
			$('#output').val('');
			}
			
			$('audio').each(function () {
			if (this !== audio) {
			this.pause();
			this.currentTime = 0;
			}
			});
		</script>
	</body>
	</html>
